generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  RECRUITER
  MANAGER
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String
  passwordHash String
  role         Role     @default(RECRUITER)
  acceptedLGPD Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Job {
  id          String   @id @default(cuid())
  title       String
  description String
  requirements String
  status      String   @default("open")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  interviews  Interview[]
}

model Candidate {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  github    String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  resumes   Resume[]
  interviews Interview[]
}

model Resume {
  id           String   @id @default(cuid())
  filename     String
  mimetype     String
  size         Int
  textContent  String
  analysisJson Json
  candidateId  String
  candidate    Candidate @relation(fields: [candidateId], references: [id])
  createdAt    DateTime @default(now())
  interviews   Interview[]
}

model Interview {
  id          String   @id @default(cuid())
  jobId       String
  job         Job      @relation(fields: [jobId], references: [id])
  candidateId String
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  resumeId    String?
  resume      Resume?  @relation(fields: [resumeId], references: [id])
  questions   Question[]
  report      Report?
  createdAt   DateTime @default(now())
}

model Question {
  id           String    @id @default(cuid())
  interviewId  String
  interview    Interview @relation(fields: [interviewId], references: [id])
  text         String
  category     String?
  createdAt    DateTime  @default(now())
}

model Report {
  id           String    @id @default(cuid())
  interviewId  String    @unique
  interview    Interview @relation(fields: [interviewId], references: [id])
  html         String
  pdfUrl       String?
  createdAt    DateTime  @default(now())
}
